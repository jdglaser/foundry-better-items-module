{"version":3,"file":"module.js","sources":["../src/constants.ts","../src/data/characterData.ts","../src/data/containerData.ts","../src/data/itemData.ts","../src/ui/tidyCharacterSheet.ts","../src/utils.ts","../src/ui/shared.ts","../src/ui/tidyContainerSheet.ts","../src/ui/tidyItemSheet.ts","../src/hooks.ts","../src/index.ts"],"sourcesContent":["export const MODULE_ID = \"dnd5e-item-improvements\";\n\nexport const BASE_COMPENDIUM_PATH = `Compendium.${MODULE_ID}.rules-reference.JournalEntry.Q4VqflHKEdN7z8Qv.JournalEntryPage`;\n\nexport const WEAPON_MASTERY_DOCUMENT_MAP = {\n  cleave: \"2GQhl3IJLZGyuHow\",\n  graze: \"mDnObAO0FapBEe7W\",\n  nick: \"HAkYfqwjw3afUReb\",\n  push: \"pQsfpAPRVyo2xohs\",\n  sap: \"70GturmG5RRxCwV4\",\n  slow: \"Ily8fxxcCqnZw7bV\",\n  topple: \"fVcGobRFtXrAXPRI\",\n  vex: \"UYnxxrKjfBE5UBl0\",\n};\n\nexport const WEAPON_PROPERTY_DOCUMENT_MAP = {\n  ammunition: \"pAMRJM7AtX2HHdCs\",\n  finesse: \"WJFU13zVwyLNRa8A\",\n  heavy: \"H8FtHo6Rtf5qcVTO\",\n  light: \"RoaQU6zkGr3PRljI\",\n  loading: \"BmGsHhheGNovmueo\",\n  range: \"TroEj3XnLGJr9bXR\",\n  reach: \"5omXI9g9KGqPxr3R\",\n  thrown: \"rm4hrxjAWJNhvtuZ\",\n  \"two-handed\": \"OXn46HGgkz1P2iri\",\n  versatile: \"I2brJKVrXvIr67Zc\",\n  \"burst-fire\": \"uDthMJAvyj0qRutp\",\n  reload: \"a4JZaVcmOWTY96Oq\",\n};\n\nexport const AMMO_TYPE_MAP: Record<string, [string, string]> = {\n  arrow: [\"Arrow\", \"Compendium.dnd-players-handbook.equipment.Item.phbamoArrows0000\"],\n  crossbowBolt: [\"Bolt\", \"Compendium.dnd-players-handbook.equipment.Item.phbamoBolts00000\"],\n  firearmBullet: [\"Bullet, Firearm\", \"Compendium.dnd-players-handbook.equipment.Item.phbamoBulletsFir\"],\n  slingBullet: [\"Bullet, Sling\", \"Compendium.dnd-players-handbook.equipment.Item.phbamoBulletsSli\"],\n  energyCell: [\"Energy Cell\", \"\"],\n  blowgunNeedle: [\"Needle\", \"Compendium.dnd-players-handbook.equipment.Item.phbamoNeedles000\"],\n};\n\nexport const RANGE_REGEX = /^\\d+\\/\\d+\\s*ft$/i;\n\nexport const REACH_REGEX = /^\\d+\\/\\d+\\s*ft$/i;\n","export class CharacterData {\n  /**\n   * Prepare derived CharacterData\n   */\n  static async prepareDerivedData(data: any) {\n    this.#resolveSlotBasedEnumberance(data);\n    this.#handleEquipmentProficiency(data);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve equipment proficiency penalties\n   */\n  static async #handleEquipmentProficiency(data: any) {\n    const ac = data.attributes.ac;\n\n    const { armors, shields } = data.parent.itemTypes.equipment.reduce(\n      (obj: any, equip: any) => {\n        if (!equip.system.equipped || !(equip.system.type.value in CONFIG.DND5E.armorTypes)) return obj;\n        if (equip.system.type.value === \"shield\") obj.shields.push(equip);\n        else obj.armors.push(equip);\n        return obj;\n      },\n      { armors: [], shields: [] }\n    );\n\n    const isProficientShields = data.traits.armorProf.value.has(\"shl\");\n\n    if (shields.length && !isProficientShields) {\n      ac.shield = 0;\n      ac.value = Math.max(ac.min, ac.base + ac.shield + ac.bonus + ac.cover);\n    }\n\n    let wearingNonProficientArmor = false;\n\n    armors.forEach((armor: any) => {\n      if (armor.system.proficiencyMultiplier === 0) {\n        wearingNonProficientArmor = true;\n      }\n    });\n\n    if (wearingNonProficientArmor) {\n      data.attributes.movement.walk -= 10;\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve slot based encumberance data for Character\n   */\n  static async #resolveSlotBasedEnumberance(data: any) {\n    console.log(\"ACTOR:\", data);\n    const allItems = [\n      ...data.parent.itemTypes.equipment,\n      ...data.parent.itemTypes.consumable,\n      ...data.parent.itemTypes.loot,\n      ...data.parent.itemTypes.weapon,\n      ...data.parent.itemTypes.container,\n    ];\n\n    let currentCapacity = 0;\n    const { cp = 0, sp = 0, ep = 0, gp = 0, pp = 0 } = data.currency;\n    let tinyItems = cp + sp + ep + gp + pp;\n    for (const item of allItems) {\n      if (item.system.container) {\n        const containerItem = data.parent.collections.items.get(item.system.container);\n        console.log(\"CONTAINERITEM:\", containerItem);\n        if (containerItem.system.properties.has(\"weightlessContents\")) {\n          console.log(\"WEIGHTLESS:\", item);\n          continue;\n        }\n      }\n\n      if (item.system.slots.tiny) {\n        tinyItems += item.system.quantity;\n      } else {\n        currentCapacity += item.system.slots.resolvedValue;\n      }\n    }\n\n    currentCapacity += Math.ceil(tinyItems / 100);\n\n    data.slotBasedEncumberance = {\n      value: currentCapacity,\n      max: data.abilities.str.value + 10,\n    };\n  }\n}\n","import { MODULE_ID } from \"../constants\";\nimport { ContainerSlots } from \"../types\";\n\nexport class ContainerData {\n  /**\n   * Prepare derived ItemData\n   */\n  static prepareDerivedData(data: any) {\n    this.#resolveSlots(data);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Getter method for resolving container capacity slots. Needs to be a getter to avoid race conditions encountered\n   * when using prepareDerivedData\n   */\n  static async getContainerCapacity(data: any) {\n    const contents = (await data.contents) ?? [];\n    let totalSlots = 0;\n    const { cp = 0, sp = 0, ep = 0, gp = 0, pp = 0 } = data.currency;\n    let tinyItems = cp + sp + ep + gp + pp;\n    for (const item of contents) {\n      if (item.type === \"container\") {\n        const capacity = await item.system.slotCapacity;\n        totalSlots += capacity;\n      } else if (item.system.slots.tiny) {\n        tinyItems += item.system.quantity;\n      } else {\n        totalSlots += item.system.slots.resolvedValue;\n      }\n    }\n\n    totalSlots += Math.ceil(tinyItems / 100);\n    return totalSlots;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve item slots for item\n   */\n  static #resolveSlots(data: any) {\n    const valueOverride = data.parent.getFlag(MODULE_ID, \"slots\");\n    const ifEquippedOverride = data.parent.getFlag(MODULE_ID, \"ifEquipped\");\n    const maxCapacityOverride = data.parent.getFlag(MODULE_ID, \"maxCapacity\");\n\n    const parent = data.parent;\n    const systemData = parent.system;\n\n    const {\n      value: defaultValue,\n      ifEquipped: defaultIfEquipped,\n      maxCapacity: defaultMaxCapacity,\n    } = this.#resolveDefaultContainerSlots(data, parent, systemData);\n\n    const value = valueOverride ?? defaultValue;\n    const ifEquipped = ifEquippedOverride ?? defaultIfEquipped;\n    const maxCapacity = maxCapacityOverride ?? defaultMaxCapacity;\n\n    let resolvedValue = data.quantity * value;\n\n    if (ifEquipped !== null && data.equipped) {\n      resolvedValue = data.quantity * ifEquipped;\n    }\n\n    const slots: ContainerSlots = {\n      value,\n      resolvedValue,\n      ifEquipped,\n      capacity: {\n        max: maxCapacity,\n      },\n    };\n\n    data.slots = slots;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolves default slot data for containers\n   */\n  static #resolveDefaultContainerSlots(data: any, parent: any, systemData: any) {\n    let ifEquipped = null;\n    let value = 1;\n    let maxCapacity = 10;\n\n    // TODO\n    return {\n      value,\n      ifEquipped,\n      maxCapacity,\n    };\n  }\n}\n","import { MODULE_ID } from \"../constants\";\nimport { ItemSlots } from \"../types\";\n\nexport class ItemData {\n  /**\n   * Prepare derived ItemData\n   */\n  static prepareDerivedData(data: any) {\n    this.#resolveItemSlots(data);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve item slots for item\n   */\n  static async updateRichTooltip(data: any, content: string) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(content, \"text/html\");\n    const weightDiv = doc.querySelector(\".weight\");\n    if (weightDiv) {\n      const span = weightDiv.querySelector(\"span\");\n      if (span) {\n        if (data.slots.tiny) {\n          span.textContent = \"Tiny\";\n        } else if (data.slots.stack && data.slots.stack !== data.slots.resolvedValue) {\n          span.textContent = `${data.slots.resolvedValue} (x${data.slots.stack})`;\n        } else {\n          span.textContent = data.slots.resolvedValue;\n        }\n      }\n    }\n    return doc.body.innerHTML.trim();\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve item slots for item\n   */\n  static #resolveItemSlots(data: any) {\n    const valueOverride = data.parent.getFlag(MODULE_ID, \"slots\");\n    const stackOverride = data.parent.getFlag(MODULE_ID, \"stack\");\n    const tinyOverride = data.parent.getFlag(MODULE_ID, \"tiny\");\n    const ifEquippedOverride = data.parent.getFlag(MODULE_ID, \"ifEquipped\");\n\n    const parent = data.parent;\n    const systemData = parent.system;\n\n    const {\n      value: defaultValue,\n      stack: defaultStack,\n      tiny: defaultTiny,\n      ifEquipped: defaultIfEquipped,\n    } = this.#resolveDefaultItemSlots(data, parent, systemData);\n\n    const value = valueOverride ?? defaultValue;\n    const stack = stackOverride ?? defaultStack;\n    const tiny = tinyOverride ?? defaultTiny;\n    const ifEquipped = ifEquippedOverride ?? defaultIfEquipped;\n\n    let resolvedValue = data.quantity * value;\n    if (stack > 1) {\n      resolvedValue = Math.ceil(data.quantity / stack) * value;\n    }\n\n    if (ifEquipped !== null && data.equipped) {\n      resolvedValue = data.quantity * ifEquipped;\n    }\n\n    data.slots = {\n      value,\n      resolvedValue,\n      stack,\n      tiny,\n      ifEquipped,\n    };\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Resolve default item slots for item\n   */\n  static #resolveDefaultItemSlots(itemData: any, parentData: any, systemData: any) {\n    let stack = 1;\n    let value = 1;\n    let tiny = false;\n    let ifEquipped = null;\n    if (itemData.type && itemData.type.value === \"ammo\") {\n      switch (itemData.identifier) {\n        case \"arrows\":\n          stack = 20;\n          break;\n        case \"bullets-firearm\":\n          stack = 10;\n          break;\n        case \"bullets-sling\":\n          stack = 20;\n          break;\n        case \"needles\":\n          stack = 50;\n          break;\n        case \"bolts\":\n          stack = 20;\n          break;\n      }\n    }\n\n    if (parentData.type === \"equipment\" && itemData.type) {\n      switch (itemData.type.value) {\n        case \"heavy\":\n          if ([\"plate-armor\", \"splint-armor\"].includes(itemData.identifier)) {\n            value = 3;\n          } else {\n            value = 2;\n          }\n          break;\n        case \"medium\":\n          value = 2;\n          break;\n        case \"light\":\n          value = 1;\n          break;\n      }\n    }\n\n    if ([\"gunpowder-keg\"].includes(itemData.identifier)) {\n      value = 2;\n    }\n\n    if ([\"ladder\"].includes(itemData.identifier)) {\n      value = 3;\n    }\n\n    if (parentData.type === \"weapon\") {\n      if ([\"hvy\", \"two\"].some((prop) => itemData.properties.has(prop))) value = 2;\n    }\n\n    if (\n      [\"clothes-fine\", \"clothes-travelers\", \"fine-clothes\", \"costume\"].includes(itemData.identifier) ||\n      itemData.identifier.startsWith(\"belt\") ||\n      itemData.identifier.startsWith(\"boots\") ||\n      itemData.identifier.startsWith(\"bracers\") ||\n      itemData.identifier.includes(\"robe\")\n    )\n      ifEquipped = 0;\n\n    if ([\"improvised-weapon\", \"unarmed-strike\", \"clawed-gauntlet\"].includes(itemData.identifier)) value = 0;\n\n    if (\n      (itemData.type && [\"gem\", \"ring\"].includes(itemData.type.value)) ||\n      [\"string\"].includes(itemData.identifier) ||\n      itemData.identifier.startsWith(\"figurine\") ||\n      itemData.identifier.includes(\"ioun-stone\") ||\n      itemData.identifier.includes(\"amulet\") ||\n      itemData.identifier.startsWith(\"bead-\")\n    )\n      tiny = true;\n\n    if ([\"candle\", \"torch\", \"rations\", \"ink-pen\", \"lock\"].includes(itemData.identifier)) {\n      stack = 3;\n    }\n\n    if ([\"tent\"].includes(itemData.identifier)) {\n      value = 2;\n    }\n\n    if (itemData.type && [\"potion\", \"poison\"].includes(itemData.type.value)) {\n      stack = 3;\n    }\n\n    if ([\"parchment\", \"paper\"].includes(itemData.identifier)) {\n      stack = 20;\n    }\n\n    // TODO: More defaults, but I'm all done\n\n    return {\n      value,\n      stack,\n      tiny,\n      ifEquipped,\n    };\n  }\n}\n","export class TidyCharacterSheet {\n  /**\n   * Render the TidyCharacterSheet changes\n   */\n  static render(html: HTMLElement, data: any) {\n    this.#injectTidyEncumberanceDetails(html, data);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject new slot based encumberance details on character page\n   */\n  static async #injectTidyEncumberanceDetails(html: HTMLElement, data: any) {\n    const inventoryContentHtml = html.querySelector(\"div.inventory-content\") as HTMLElement;\n    if (!inventoryContentHtml) return;\n\n    const encumbranceDetails = inventoryContentHtml.querySelector(\"div.encumbrance-details\");\n    if (!encumbranceDetails) return;\n\n    const { value, max } = data.system.slotBasedEncumberance;\n\n    encumbranceDetails.innerHTML = `\n      <div class=\"pill flexshrink\"><span class=\"text-normal\">Strength</span> <span>${\n        data.system.abilities.str.value\n      }</span></div>\n      ${this.#getTidyProgressBarHTMLString(value, max, \"fas fa-weight-hanging\", \"Item Slots\")}\n    `;\n\n    // Hide weight based capacity bar for container items\n    const capacityBars = inventoryContentHtml.querySelectorAll(\n      'div[data-tidy-column-key=\"capacityBar\"]'\n    ) as NodeListOf<HTMLElement>;\n\n    for (const bar of capacityBars) {\n      bar.style.display = \"none\";\n    }\n\n    // Update all weight rows to slots\n    inventoryContentHtml.querySelectorAll('[data-tidy-column-key=\"weight\"]').forEach((el) => {\n      if (el.textContent.trim() === \"Weight\") {\n        el.textContent = \"Slots\";\n      }\n    });\n\n    inventoryContentHtml.querySelectorAll('.tidy-table-cell[data-tidy-column-key=\"weight\"]').forEach((el) => {\n      const row = el.closest(\"[data-item-id]\") as HTMLElement | null;\n      if (!row) return;\n\n      const itemId = row.dataset.itemId;\n      const item = data.actor.collections.items.get(itemId);\n\n      if (item.system.slots.tiny) {\n        el.innerHTML = `<span>Tiny</span>`;\n      } else {\n        const slotValue = item.system.slots.resolvedValue;\n        const slotLabel = \"slot\" + (slotValue > 1 ? \"s\" : \"\");\n        el.innerHTML = `<span>${slotValue} <span class=\"color-text-lighter\">${slotLabel}</span></span>`;\n      }\n    });\n\n    // Replace container capacity tracker cells\n    inventoryContentHtml\n      .querySelectorAll('.tidy-table-cell[data-tidy-column-key=\"capacityTracker\"]')\n      .forEach(async (el) => {\n        const row = el.closest(\"[data-item-id]\") as HTMLElement | null;\n        if (!row) return;\n\n        const itemId = row.dataset.itemId;\n        const item = data.actor.collections.items.get(itemId);\n\n        // Grab slots\n        const used = await item.system.slotCapacity;\n        const max = item.system.slots.capacity.max;\n\n        // Replace HTML\n        el.innerHTML = `\n      <div class=\"inline-container-capacity-tracker\">\n        <div class=\"label\">\n          <span class=\"value font-weight-label\">${used}</span>\n          <span class=\"separator\">/</span>\n          <span class=\"max color-text-default\">${max}</span>\n          <span class=\"units color-text-lightest\">slots</span>\n        </div>\n      </div>\n    `;\n      });\n  }\n\n  /**\n   * Get HTML string to render tidy progress bar\n   */\n  static #getTidyProgressBarHTMLString(value: number, max: number, icon: string, tooltip: string) {\n    const percentage = Math.round((value / max) * 100);\n    return `\n      <div role=\"meter\" \n        aria-valuemin=\"0\" \n        data-tooltip-direction=\"UP\" \n        data-tooltip=\"${tooltip}\"\n        class=\"meter progress encumbrance theme-dark medium${percentage >= 100 ? \"high\" : \"\"}\" \n        aria-valuenow=\"${(value / max) * 100}\" \n        aria-valuetext=\"${value}\" \n        aria-valuemax=\"${max}\" \n        style=\"--bar-percentage: ${percentage}%; \n        --encumbrance-low: 33.333333333333336%; \n        --encumbrance-high: 66.66666666666667%;\">\n          <div class=\"label\">\n            <i class=\"${icon} text-label-icon\"></i>\n             <span class=\"value font-weight-label\">${value}</span> \n             <span class=\"separator\">/</span> \n             <span class=\"max color-text-default\">${max}</span>\n          </div> \n          <i class=\"breakpoint encumbrance-low arrow-up\" role=\"presentation\"></i> \n          <i class=\"breakpoint encumbrance-low arrow-down\" role=\"presentation\"></i> \n          <i class=\"breakpoint encumbrance-high arrow-up\" role=\"presentation\"></i> \n          <i class=\"breakpoint encumbrance-high arrow-down\" role=\"presentation\"></i>\n        </div>\n    `;\n  }\n}\n","import { BASE_COMPENDIUM_PATH, WEAPON_MASTERY_DOCUMENT_MAP, WEAPON_PROPERTY_DOCUMENT_MAP } from \"./constants\";\n\nconst dieSteps = [4, 6, 8, 10, 12, 20, 100];\n\nexport function steppedDenomination(denomination: number, steps: number = 1) {\n  return dieSteps[Math.min(dieSteps.indexOf(denomination) + steps, dieSteps.length - 1)] ?? null;\n}\n\nexport function getDocumentPath(key: string) {\n  const id = { ...WEAPON_MASTERY_DOCUMENT_MAP, ...WEAPON_PROPERTY_DOCUMENT_MAP }[key];\n  return `${BASE_COMPENDIUM_PATH}.${id}`;\n}\n\nexport function getDocumentReference(key: string, label: string) {\n  return `@UUID[${getDocumentPath(key)}]{${label}}`;\n}\n\nexport async function getDocumentReferenceHtml(key: string, label: string) {\n  const enrichedHtml = await foundry.applications.ux.TextEditor.enrichHTML(getDocumentReference(key, label));\n  const template = document.createElement(\"template\");\n  template.innerHTML = enrichedHtml.trim();\n  const enrichedHtmlElement = template.content.firstElementChild as HTMLElement;\n  const icon = enrichedHtmlElement.querySelector(\"i.fa-solid\");\n  if (icon) {\n    icon.remove();\n  }\n  return enrichedHtmlElement;\n}\n\nexport function titleCase(str: string) {\n  return str.toLowerCase().replace(/\\b\\w/g, (c) => c.toUpperCase());\n}\n\nexport function isPromise(value: any): value is Promise<any> {\n  return typeof value.then === \"function\";\n}\n","import { MODULE_ID } from \"../constants\";\n\nexport class Shared {\n  static getSlotsInputComponent(data: any) {\n    const slotsInputContainer = document.createElement(\"div\");\n    slotsInputContainer.classList.add(\"form-group\", \"label-top\");\n    const slotsLabel = document.createElement(\"label\");\n    slotsLabel.innerHTML = \"Slots\";\n\n    const slotsInput = document.createElement(\"input\");\n    slotsInput.classList.add(\"better-items-slots\");\n    slotsInput.type = \"number\";\n    slotsInput.min = \"0\";\n    slotsInput.value = data.system.slots.value;\n\n    slotsInput.addEventListener(\"focusout\", async (ev) => {\n      const value = (ev.target as HTMLInputElement).value ?? slotsInput.value;\n      const parsedValue = parseInt(value);\n      if (Number.isNaN(parsedValue)) {\n        await data.system.parent.unsetFlag(MODULE_ID, \"slots\");\n        slotsInput.value = data.system.slots.value;\n      } else {\n        await data.system.parent.setFlag(MODULE_ID, \"slots\", parsedValue);\n      }\n    });\n\n    slotsInputContainer.replaceChildren(slotsLabel, slotsInput);\n    return slotsInputContainer;\n  }\n\n  static getIfEquippedInputComponent(data: any) {\n    const ifEquippedInputContainer = document.createElement(\"div\");\n    ifEquippedInputContainer.classList.add(\"form-group\", \"label-top\");\n    const ifEquippedLabel = document.createElement(\"label\");\n    ifEquippedLabel.innerHTML = \"If Equipped\";\n\n    const ifEquippedInput = document.createElement(\"input\");\n    ifEquippedInput.classList.add(\"better-items-slots\");\n    ifEquippedInput.type = \"number\";\n    ifEquippedInput.min = \"0\";\n    ifEquippedInput.value = data.system.slots.ifEquipped;\n\n    ifEquippedInput.addEventListener(\"focusout\", async (ev) => {\n      const value = (ev.target as HTMLInputElement).value ?? ifEquippedInput.value;\n      const parsedValue = parseInt(value);\n      if (Number.isNaN(parsedValue)) {\n        await data.system.parent.unsetFlag(MODULE_ID, \"ifEquipped\");\n        ifEquippedInput.value = data.system.slots.ifEquipped;\n      } else {\n        await data.system.parent.setFlag(MODULE_ID, \"ifEquipped\", parsedValue);\n      }\n    });\n\n    ifEquippedInputContainer.replaceChildren(ifEquippedLabel, ifEquippedInput);\n    return ifEquippedInputContainer;\n  }\n\n  static injectWeightValue(html: HTMLElement, value: string) {\n    const headerHtml = html.querySelector(\"div.item-header-summary\") as HTMLElement | null;\n    if (!headerHtml) return;\n\n    const itemWeightValue = headerHtml.querySelector(\"span.item-weight-value\");\n    if (itemWeightValue) itemWeightValue.innerHTML = value;\n  }\n\n  static toggleSlotsDetailsLock(html: HTMLElement, data: any) {\n    const detailsContent = html.querySelector(\"div.tidy-tab.details\") as HTMLElement | null;\n    if (!detailsContent) return;\n\n    const inputs = detailsContent.querySelectorAll(\"input.better-items-slots\") as NodeListOf<HTMLInputElement>;\n    for (const input of inputs) {\n      input.disabled = !data.unlocked;\n    }\n  }\n}\n","import { MODULE_ID } from \"../constants\";\nimport { ContainerSlots } from \"../types\";\nimport { isPromise } from \"../utils\";\nimport { Shared } from \"./shared\";\n\nexport class TidyContainerSheet {\n  /**\n   * Render the TidyItemSheet changes\n   */\n  static render(html: HTMLElement, data: any) {\n    this.#injectSlotsDetails(html, data);\n    this.#replaceHTMLElements(html, data);\n    Shared.injectWeightValue(html, this.#formatSlotsShorthand(data.system.slots));\n    Shared.toggleSlotsDetailsLock(html, data);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Format the slots object as a string\n   */\n  static #formatSlotsShorthand({ value, ifEquipped }: ContainerSlots) {\n    const ifEquippedText = ifEquipped === null ? \"\" : ` (${ifEquipped} if equipped)`;\n    return `${value}${ifEquippedText}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject HTML for handling slot configuration for a container\n   */\n  static #injectSlotsDetails(html: HTMLElement, data: any) {\n    // Get details tab of item sheet\n    const detailsContent = html.querySelector(\"div.tidy-tab.details\") as HTMLElement;\n\n    // Avoid adding the weight group again on re-renders\n    if (detailsContent.querySelector(\".better-items-slots-group\")) {\n      return;\n    }\n\n    // Get the existing weight group form\n    const weightGroup = detailsContent.querySelector(\".form-group label[for$='-weight-value']\")?.closest(\".form-group\");\n    if (!weightGroup) return;\n    weightGroup.classList.add(\"better-items-slots-group\");\n\n    const label = weightGroup.querySelector(\"label\");\n    if (label) label.innerHTML = \"Slots\";\n\n    const formFields = weightGroup.querySelector(\"div.form-fields\");\n    if (!formFields) return;\n\n    // Slots input\n    const slotsInputContainer = Shared.getSlotsInputComponent(data);\n\n    // If Equipped input\n    const ifEquippedInputContainer = Shared.getIfEquippedInputComponent(data);\n\n    // Capacity input\n    const capacityInputContainer = document.createElement(\"div\");\n    capacityInputContainer.classList.add(\"form-group\", \"label-top\");\n    const capacityLabel = document.createElement(\"label\");\n    capacityLabel.innerHTML = \"Capacity\";\n\n    const capacityInput = document.createElement(\"input\");\n    capacityInput.classList.add(\"better-items-slots\");\n    capacityInput.type = \"number\";\n    capacityInput.min = \"1\";\n    capacityInput.value = data.system.slots.capacity.max;\n\n    capacityInput.addEventListener(\"focusout\", async (ev) => {\n      const value = (ev.target as HTMLInputElement).value ?? capacityInput.value;\n      const parsedValue = parseInt(value);\n      if (Number.isNaN(parsedValue)) {\n        await data.system.parent.unsetFlag(MODULE_ID, \"maxCapacity\");\n        capacityInput.value = data.system.slots.capacity.max;\n      } else {\n        await data.system.parent.setFlag(MODULE_ID, \"maxCapacity\", parsedValue);\n      }\n    });\n\n    capacityInputContainer.replaceChildren(capacityLabel, capacityInput);\n\n    // Inject elements\n    formFields.replaceChildren(slotsInputContainer, ifEquippedInputContainer, capacityInputContainer);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject HTML for slots used\n   */\n  static #replaceHTMLElements(html: HTMLElement, data: any) {\n    // Remove legacy capacity settings\n    const fieldsets = html.querySelectorAll(\"fieldset\");\n    const capacityFieldset = Array.from(fieldsets).find((fs) =>\n      fs.querySelector(\"legend\")?.textContent.trim().startsWith(\"Capacity\")\n    );\n    if (capacityFieldset) capacityFieldset.remove();\n\n    // Update capacity pill\n    // If there are multiple pills, filter by text\n    const pills = html.querySelectorAll(\"li.pill\");\n    const capacityPill = Array.from(pills).find((p) => p.textContent.trim().startsWith(\"Holds\"));\n\n    if (capacityPill) {\n      capacityPill.textContent = `Holds ${data.system.slots.capacity.max} Slots`;\n    }\n\n    // Update the capacity counter\n    const capacityValueText = html.querySelector(\"span.capacity-value.text-data\");\n    if (capacityValueText) {\n      const slotCapacity = data.system.slotCapacity;\n      if (isPromise(slotCapacity)) {\n        slotCapacity.then((value) => {\n          capacityValueText.innerHTML = value;\n        });\n      } else {\n        capacityValueText.innerHTML = data.system.slotCapacity;\n      }\n    }\n\n    const capacityMaxText = html.querySelector(\"span.capacity-max.text-data\");\n    if (capacityMaxText) capacityMaxText.innerHTML = data.system.slots.capacity.max;\n\n    // Remove progress meter\n    const progressMeters = html.querySelectorAll(\".meter.progress.capacity\");\n    for (const meter of progressMeters) {\n      meter.remove();\n    }\n\n    // Hide weight based capacity bar for container items\n    const capacityBars = html.querySelectorAll('div[data-tidy-column-key=\"capacityBar\"]') as NodeListOf<HTMLElement>;\n    for (const bar of capacityBars) {\n      bar.style.display = \"none\";\n    }\n\n    // Update all weight rows to slots\n    html.querySelectorAll('[data-tidy-column-key=\"weight\"]').forEach((el) => {\n      if (el.textContent.trim() === \"Weight\") {\n        el.textContent = \"Slots\";\n      }\n    });\n    html.querySelectorAll('.tidy-table-cell[data-tidy-column-key=\"weight\"]').forEach(async (el) => {\n      const row = el.closest(\"[data-item-id]\") as HTMLElement | null;\n      if (!row) return;\n\n      const itemId = row.dataset.itemId;\n      const item = await data.system.getContainedItem(itemId);\n\n      if (item.system.slots.tiny) {\n        el.innerHTML = `<span>Tiny</span>`;\n      } else {\n        const slotValue = item.system.slots.resolvedValue;\n        const slotLabel = \"slot\" + (slotValue > 1 ? \"s\" : \"\");\n        el.innerHTML = `<span>${slotValue} <span class=\"color-text-lighter\">${slotLabel}</span></span>`;\n      }\n    });\n\n    // Replace container capacity tracker cells\n    html.querySelectorAll('.tidy-table-cell[data-tidy-column-key=\"capacityTracker\"]').forEach(async (el) => {\n      const row = el.closest(\"[data-item-id]\") as HTMLElement | null;\n      if (!row) return;\n\n      const itemId = row.dataset.itemId;\n      const item = await data.system.getContainedItem(itemId);\n\n      // Grab slots\n      const used = await item.system.slotCapacity;\n      const max = item.system.slots.capacity.max;\n\n      // Replace HTML\n      el.innerHTML = `\n      <div class=\"inline-container-capacity-tracker\">\n        <div class=\"label\">\n          <span class=\"value font-weight-label\">${used}</span>\n          <span class=\"separator\">/</span>\n          <span class=\"max color-text-default\">${max}</span>\n          <span class=\"units color-text-lightest\">slots</span>\n        </div>\n      </div>\n    `;\n    });\n  }\n}\n","import {\n  AMMO_TYPE_MAP,\n  MODULE_ID,\n  RANGE_REGEX,\n  WEAPON_MASTERY_DOCUMENT_MAP,\n  WEAPON_PROPERTY_DOCUMENT_MAP,\n} from \"../constants\";\nimport { ItemSlots } from \"../types\";\nimport { Shared } from \"./shared\";\nimport { getDocumentReferenceHtml, steppedDenomination, titleCase } from \"../utils\";\n\nexport class TidyItemSheet {\n  /**\n   * Render the TidyItemSheet changes\n   */\n  static render(html: HTMLElement, data: any) {\n    this.#injectSlotsDetails(html, data);\n    this.#injectItemHoverPills(html, data);\n    Shared.injectWeightValue(html, this.#formatSlotsShorthand(data.system.slots));\n    Shared.toggleSlotsDetailsLock(html, data);\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject better mastery and property information on pills\n   */\n  static async #injectItemHoverPills(html: HTMLElement, data: any) {\n    // Only weapons and armor/equipment\n    const type = data.data.type;\n    if (![\"weapon\", \"equipment\"].includes(type)) return;\n\n    const systemData = data.data.system;\n\n    // Handle Actions\n    const actionDiv = Array.from(html.querySelectorAll(\"div\")).find(\n      (div) => div.querySelector(\"h4\")?.textContent?.trim() === \"Action\"\n    );\n\n    // TODO: Handle in function so we can early return only there\n    if (!actionDiv) return;\n\n    const actionPillList = actionDiv.querySelector(\"ul.pills.stacked\");\n    if (!actionPillList) return;\n\n    actionPillList.querySelectorAll(\"li.pill\").forEach(async (li) => {\n      const label = li.textContent?.trim();\n\n      if (RANGE_REGEX.test(label)) {\n        const enrichedhtml = await getDocumentReferenceHtml(\"range\", \"Range\");\n        li.replaceChildren(enrichedhtml, label);\n      }\n    });\n\n    // Handle Properties\n    const propertyDiv = Array.from(html.querySelectorAll(\"div\")).find(\n      (div) => div.querySelector(\"h4\")?.textContent?.trim() === \"Properties\"\n    );\n\n    // TODO: Handle in function\n    if (!propertyDiv) return;\n\n    const pillList = propertyDiv.querySelector(\"ul.pills.stacked\");\n    if (!pillList) return;\n\n    // Loop through each <li class=\"pill\">\n    pillList.querySelectorAll(\"li.pill\").forEach(async (li) => {\n      const label = li.textContent?.trim();\n      const identifier = label.toLowerCase() ?? \"\";\n      if (!(identifier in { ...WEAPON_MASTERY_DOCUMENT_MAP, ...WEAPON_PROPERTY_DOCUMENT_MAP })) {\n        return;\n      }\n\n      const enrichedhtml = await getDocumentReferenceHtml(identifier, label);\n      switch (identifier) {\n        case \"versatile\":\n          const versatileDamageNumber = systemData.damage.base.number;\n          const versatileDamageDenomination = steppedDenomination(systemData.damage.base.denomination);\n\n          li.replaceChildren(\n            enrichedhtml,\n            document.createTextNode(` (${versatileDamageNumber}d${versatileDamageDenomination})`)\n          );\n          break;\n        case \"ammunition\":\n        case \"thrown\":\n          const rangeNormal = systemData.range.value;\n          const rangeLong = systemData.range.long;\n          const rangeUnits = systemData.range.units;\n\n          let enrichedAmmoHTML = null;\n          if (systemData.ammunition.type) {\n            const ammoType = systemData.ammunition.type;\n            const [label, itemDocument] = AMMO_TYPE_MAP[ammoType];\n            const enrichedAmmoHTMLString = await foundry.applications.ux.TextEditor.enrichHTML(\n              `@UUID[${itemDocument}]{${label}}`\n            );\n            const template = document.createElement(\"template\");\n            template.innerHTML = enrichedAmmoHTMLString.trim();\n            enrichedAmmoHTML = template.content.firstElementChild as HTMLElement;\n          }\n\n          const parenSpan = document.createElement(\"span\");\n          if (enrichedAmmoHTML) {\n            parenSpan.replaceChildren(`(${rangeNormal}/${rangeLong} ${rangeUnits}, `, enrichedAmmoHTML, \")\");\n          } else {\n            parenSpan.replaceChildren(`(${rangeNormal}/${rangeLong} ${rangeUnits})`);\n          }\n\n          li.replaceChildren(enrichedhtml, parenSpan);\n          break;\n        case \"reload\":\n          const reloadShots = systemData.uses.max;\n\n          li.replaceChildren(enrichedhtml, document.createTextNode(` (${reloadShots} shots)`));\n          break;\n        default:\n          li.replaceChildren(enrichedhtml);\n      }\n    });\n\n    console.log(systemData);\n    if ([\"automatic-rifle\"].includes(systemData.identifier)) {\n      const enrichedhtml = await getDocumentReferenceHtml(\"burst-fire\", \"Burst Fire\");\n      pillList.insertAdjacentHTML(\"beforeend\", `<li class=\"pill centered mastery\">${enrichedhtml.outerHTML}</li>`);\n    }\n\n    const mastery = systemData.mastery;\n    if (mastery && !html.querySelector(\"li.mastery\")) {\n      const enrichedhtml = await getDocumentReferenceHtml(mastery, titleCase(mastery));\n      pillList.insertAdjacentHTML(\n        \"beforeend\",\n        `<li class=\"pill centered mastery\"><span class=\"text-normal\">Mastery</span> ${enrichedhtml.outerHTML}</li>`\n      );\n    }\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Format the slots object as a string\n   */\n  static #formatSlotsShorthand({ value, stack, tiny, ifEquipped }: ItemSlots) {\n    if (tiny) {\n      return \"Tiny\";\n    }\n\n    const stackText = stack === 1 ? \"\" : ` (Stack: x${stack})`;\n    const ifEquippedText = ifEquipped === null ? \"\" : ` (${ifEquipped} if equipped)`;\n    return `${value}${ifEquippedText}${stackText}`;\n  }\n\n  /* -------------------------------------------- */\n\n  /**\n   * Inject HTML for handling slot configuration for an item\n   */\n  static #injectSlotsDetails(html: HTMLElement, data: any) {\n    // Get details tab of item sheet\n    const detailsContent = html.querySelector(\"div.tidy-tab.details\") as HTMLElement;\n\n    // Avoid adding the weight group again on re-renders\n    if (detailsContent.querySelector(\".better-items-slots-group\")) {\n      return;\n    }\n\n    // Get the existing weight group form\n    const weightGroup = detailsContent.querySelector(\".form-group label[for$='-weight-value']\")?.closest(\".form-group\");\n    if (!weightGroup) return;\n    weightGroup.classList.add(\"better-items-slots-group\");\n\n    const label = weightGroup.querySelector(\"label\");\n    if (label) label.innerHTML = \"Slots\";\n\n    const formFields = weightGroup.querySelector(\"div.form-fields\");\n    if (!formFields) return;\n\n    // Slots input\n    const slotsInputContainer = Shared.getSlotsInputComponent(data);\n\n    // If Equipped input\n    const ifEquippedInputContainer = Shared.getIfEquippedInputComponent(data);\n\n    // Stack input\n    const stackInputContainer = document.createElement(\"div\");\n    stackInputContainer.classList.add(\"form-group\", \"label-top\");\n    const stackLabel = document.createElement(\"label\");\n    stackLabel.innerHTML = \"Stack\";\n\n    const stackInput = document.createElement(\"input\");\n    stackInput.classList.add(\"better-items-slots\");\n    stackInput.type = \"number\";\n    stackInput.min = \"1\";\n    stackInput.value = data.system.slots.stack;\n\n    stackInput.addEventListener(\"focusout\", async (ev) => {\n      const value = (ev.target as HTMLInputElement).value ?? stackInput.value;\n      const parsedValue = parseInt(value);\n      if (Number.isNaN(parsedValue)) {\n        await data.system.parent.unsetFlag(MODULE_ID, \"stack\");\n        stackInput.value = data.system.slots.stack;\n      } else {\n        await data.system.parent.setFlag(MODULE_ID, \"stack\", parsedValue);\n      }\n    });\n\n    stackInputContainer.replaceChildren(stackLabel, stackInput);\n\n    // Tiny input\n    const tinyInputContainer = document.createElement(\"div\");\n    tinyInputContainer.classList.add(\"form-group\", \"label-top\");\n    tinyInputContainer.style.alignSelf = \"flex-start\";\n    const tinyLabel = document.createElement(\"label\");\n    tinyLabel.innerHTML = \"Tiny\";\n\n    const tinyInput = document.createElement(\"input\");\n    tinyInput.classList.add(\"better-items-slots\");\n    tinyInput.type = \"checkbox\";\n    tinyInput.checked = data.system.slots.tiny;\n\n    tinyInput.addEventListener(\"change\", async (ev) => {\n      const checked = (ev.target as HTMLInputElement).checked;\n      await data.system.parent.setFlag(MODULE_ID, \"tiny\", checked);\n    });\n\n    tinyInputContainer.replaceChildren(tinyLabel, tinyInput);\n\n    // Inject elements\n    formFields.replaceChildren(slotsInputContainer, stackInputContainer, ifEquippedInputContainer, tinyInputContainer);\n  }\n}\n","import { MODULE_ID, RANGE_REGEX } from \"./constants\";\nimport { CharacterData } from \"./data/characterData\";\nimport { ContainerData } from \"./data/containerData\";\nimport { ItemData } from \"./data/itemData\";\nimport { TidyCharacterSheet } from \"./ui/tidyCharacterSheet\";\nimport { TidyContainerSheet } from \"./ui/tidyContainerSheet\";\nimport { TidyItemSheet } from \"./ui/tidyItemSheet\";\nimport { getDocumentReferenceHtml, steppedDenomination, titleCase } from \"./utils\";\n\nHooks.once(\"init\", () => {\n  if (!game || !game.settings) return;\n\n  // @ts-ignore\n  const DndContainerData = dnd5e.dataModels.item.ContainerData;\n\n  if (!Object.prototype.hasOwnProperty.call(DndContainerData.prototype, \"slotCapacity\")) {\n    Object.defineProperty(DndContainerData.prototype, \"slotCapacity\", {\n      get: function () {\n        return ContainerData.getContainerCapacity(this);\n      },\n      configurable: true,\n    });\n  }\n\n  game.settings.register(MODULE_ID as any, \"enableTooltips\" as any, {\n    name: \"Enable Property Tooltips\",\n    hint: \"If enabled, item property pills will be replaced with rule reference tooltips.\",\n    scope: \"client\",\n    config: true,\n    type: Boolean,\n    default: true,\n  });\n\n  for (const itemDataClass of [\"LootData\", \"WeaponData\", \"EquipmentData\", \"ToolData\", \"ConsumableData\"]) {\n    libWrapper.register(\n      MODULE_ID,\n      `dnd5e.dataModels.item.${itemDataClass}.prototype.prepareDerivedData`,\n      function (wrapped: any, ...args: any) {\n        let result = wrapped(...args);\n        ItemData.prepareDerivedData(this);\n        return result;\n      },\n      \"MIXED\"\n    );\n  }\n\n  libWrapper.register(\n    MODULE_ID,\n    \"dnd5e.dataModels.item.ContainerData.prototype.prepareDerivedData\",\n    function (wrapped: any, ...args: any) {\n      let result = wrapped(...args);\n      ContainerData.prepareDerivedData(this);\n      return result;\n    },\n    \"MIXED\"\n  );\n\n  libWrapper.register(\n    MODULE_ID,\n    \"dnd5e.dataModels.abstract.ItemDataModel.prototype.richTooltip\",\n    async function (wrapped: any, ...args: any) {\n      let { content, classes } = await wrapped(...args);\n      const newContent = await ItemData.updateRichTooltip(this, content);\n      return { content: newContent, classes };\n    },\n    \"MIXED\"\n  );\n\n  libWrapper.register(\n    MODULE_ID,\n    \"dnd5e.dataModels.actor.CharacterData.prototype.prepareDerivedData\",\n    function (wrapped: any, ...args: any) {\n      let result = wrapped(...args);\n      CharacterData.prepareDerivedData(this);\n      return result;\n    },\n    \"MIXED\"\n  );\n});\n\nHooks.on(\"renderTidy5eContainerSheetQuadrone\" as any, async (app: any, html: HTMLElement, data: any) => {\n  TidyContainerSheet.render(html, data);\n});\n\nHooks.on(\"renderTidy5eItemSheetQuadrone\" as any, async (app: any, html: HTMLElement, data: any) => {\n  TidyItemSheet.render(html, data);\n});\n\nHooks.on(\"renderTidy5eCharacterSheetQuadrone\" as any, async (app: any, html: HTMLElement, data: any) => {\n  TidyCharacterSheet.render(html, data);\n});\n","import \"./hooks.js\";\n\nconsole.log(\"dnd5e-tooltips loaded!\");\n"],"names":["MODULE_ID","BASE_COMPENDIUM_PATH","WEAPON_MASTERY_DOCUMENT_MAP","WEAPON_PROPERTY_DOCUMENT_MAP","AMMO_TYPE_MAP","RANGE_REGEX","_CharacterData_static","handleEquipmentProficiency_fn","resolveSlotBasedEnumberance_fn","CharacterData","data","__privateMethod","ac","armors","shields","obj","equip","isProficientShields","wearingNonProficientArmor","armor","allItems","currentCapacity","cp","sp","ep","gp","pp","tinyItems","item","containerItem","__privateAdd","_ContainerData_static","resolveSlots_fn","resolveDefaultContainerSlots_fn","ContainerData","contents","totalSlots","capacity","valueOverride","ifEquippedOverride","maxCapacityOverride","parent","systemData","defaultValue","defaultIfEquipped","defaultMaxCapacity","value","ifEquipped","maxCapacity","resolvedValue","slots","_ItemData_static","resolveItemSlots_fn","resolveDefaultItemSlots_fn","ItemData","content","doc","weightDiv","span","stackOverride","tinyOverride","defaultStack","defaultTiny","stack","tiny","itemData","parentData","prop","_TidyCharacterSheet_static","injectTidyEncumberanceDetails_fn","getTidyProgressBarHTMLString_fn","TidyCharacterSheet","html","inventoryContentHtml","encumbranceDetails","max","capacityBars","bar","el","row","itemId","slotValue","slotLabel","used","icon","tooltip","percentage","dieSteps","steppedDenomination","denomination","steps","getDocumentPath","key","id","getDocumentReference","label","getDocumentReferenceHtml","enrichedHtml","template","enrichedHtmlElement","titleCase","str","c","isPromise","Shared","slotsInputContainer","slotsLabel","slotsInput","ev","parsedValue","ifEquippedInputContainer","ifEquippedLabel","ifEquippedInput","headerHtml","itemWeightValue","detailsContent","inputs","input","_TidyContainerSheet_static","formatSlotsShorthand_fn","injectSlotsDetails_fn","replaceHTMLElements_fn","TidyContainerSheet","ifEquippedText","_a","weightGroup","formFields","capacityInputContainer","capacityLabel","capacityInput","fieldsets","capacityFieldset","fs","pills","capacityPill","p","capacityValueText","slotCapacity","capacityMaxText","progressMeters","meter","_TidyItemSheet_static","injectItemHoverPills_fn","TidyItemSheet","type","actionDiv","div","_b","actionPillList","li","enrichedhtml","propertyDiv","pillList","identifier","versatileDamageNumber","versatileDamageDenomination","rangeNormal","rangeLong","rangeUnits","enrichedAmmoHTML","ammoType","itemDocument","enrichedAmmoHTMLString","parenSpan","reloadShots","mastery","stackText","stackInputContainer","stackLabel","stackInput","tinyInputContainer","tinyLabel","tinyInput","checked","DndContainerData","itemDataClass","wrapped","args","result","classes","app"],"mappings":"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"}